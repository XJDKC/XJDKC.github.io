<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[盒子与小球]]></title>
      <url>/2017/12/13/%E5%B0%8F%E7%90%83%E4%B8%8E%E7%9B%92%E5%AD%90/</url>
      <content type="html"><![CDATA[<h3 id="Description-of-the-Problem"><a href="#Description-of-the-Problem" class="headerlink" title="Description of the Problem:"></a>Description of the Problem:</h3><blockquote>
<p>你有K个相同的盒子，N个互不相同的物品。你准备把这N个物品装入K个盒子，每个盒子最少要放入一个物品。问一共会有多少种分配方法。由于方案数很大，只需要输出方案总数除以10000的余数。</p>
</blockquote>
<h4 id="INPUT："><a href="#INPUT：" class="headerlink" title="INPUT："></a>INPUT：</h4><blockquote>
<p>第一行有一个正整数 t ，表示数据组数(不多于50)。每组数据仅一行，两个整数， N 和K，其中1≤N ≤ 10^9，K≤min(50,N)。</p>
</blockquote>
<h4 id="OUTPUT："><a href="#OUTPUT：" class="headerlink" title="OUTPUT："></a>OUTPUT：</h4><blockquote>
<p>每行输出一个整数，为方案总数除以10000的余数。</p>
</blockquote>
<a id="more"></a>
<h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis:"></a>Analysis:</h3><p>　　这是一个来自于同为HUSTer的高中童鞋的问题,从这个问题描述中,我们可以知道把N个物品放入K个相同的盒子的方法数就是  把N-1个物品放入K-1个盒子的方法数  加上  把N-1个物品放入K个盒子的方法数*K,为什么?我们只要考虑最后一个盒子和最后一个球即可,由于盒子是相同的,那么有两种情况<br>　　1.最后一个盒子只有一个球且为第N个球，即前面N-1个球没有填满K个盒子，最后一个球只能放在空盒子里。这种情况方法数就等于把N-1个物品放入K-1个盒子的方法数。<br>　　2.前面N-1个球填满的K个盒子，那么最后一个球可以任意放。这种情况方法数就等于  把N-1个物品放入K个盒子的方法数*K。</p>
<p>　　所以如果用f(N,K)来表示 N个物品K个盒子的方法数，可以得到以下递推式</p>
<p>　　<strong>f(N,K)=f(N-1,K-1)+f(N-1,K)*K;(即第二类斯特林数)</strong></p>
<p>　　所以现在已经可以用程序通过递推算出结果（递归也可以但要慢一些，即使是记忆化递归）。但问题解决了吗？</p>
<p>　　答案是：<strong>NO</strong>。由于N很大所以要一项一项递推计算f(N,K)肯定会超时应为至少要算N*K次，所以显然要找更快速的算法让时间复杂度降低O(logn*K)。我们这时可以运用矩阵+快速幂的形式来解决这个问题。</p>
<p>　　首先来解释一下什么是快速幂：举个例子，对于计算q^k，我们其实可以将之看成<strong>q^[a(n)*2^n+a(n-1)*2^(n-1)+……a(1)*2^1+a(0)*2^0]</strong>,其中a(n)=0或1。即把k看成许多{2^m}中某n+1项之和，那么怎么快速计算q^k呢？我们先把q^k看成n+1项之积，然后我们可以对k不断除2取余，如果第i次除2后余数为1，那么表示a(i-1)=1，即有n+1项乘积中有q^(i-1)这一项，具体描述步骤如下</p>
<p>　　首先我们用让一个数ans=1，用来存答案，用一个数x来存q^(i-1)，x开始为1，然后先对k进行第一次除以2，如果余数为1，证明a(0)=1，有q^0这一项，于是让ans*=x,如果不为1，证明不存在这一项(或者说着这一项为1)，就不用乘，然后进行完上述操作，x*=q;<br>　　然后我们对k进行第二次除以2，此时x=q^1，如果余数为1，证明a(1)=1，有q^1这一项，于是让ans*=x,如果不为1，证明不存在这一项(或者说着这一项为1)，就不用乘，然后进行完上述操作，x*=q;所以在对k进行第i次除以2操作时，x=q^(i-1)， 如果余数为1，证明a(i-1)=1，有q^(i-1)这一项，于是让ans*=x,如果不为1，证明不存在这一项(或者说着这一项为1)，就不用乘，然后进行完上述操作，x*=q;最后如果k=0证明已经除完了，ans已经算完那么就得到了结果，结束运算。<br>　　现在来分析一下算法效率，若按照原算法计算q^k要乘k次也就是计算k次，用现在的快速幂算法，则要除以[log2(k)]+1次，也就是x要乘[log2(k)]+1次，而如果a(n)均为1，那么要ans也要乘 [log2(k)]+1，所以最多算2{[log2(k)]+1}次算法效率为O(logk)。<br>        现在来讲一讲矩阵乘法：<br>　　定义：设A为m×p的矩阵，B为p×n的矩阵，那么称m×n的矩阵C为矩阵A与B的乘积，记作C=A×B<br>　　计算方法：乘积C的第m行第n列的元素等于矩阵A的第m行的元素与矩阵B的第n列对应元素乘积之和。<br>        性质：乘法结合律：(AB)C=A(BC)</p>
<p>　　所以我们可以把原问题的递推式子变成一个矩阵递推式<br>$$\begin{equation}<br>\begin{pmatrix}<br>f(n,k)\\<br>f(n,k-1)\\<br>\vdots\\<br>f(n,2)\\<br>f(n,1)\\<br>\end{pmatrix}={<br>\begin{pmatrix}<br>k&amp;1&amp;0&amp;\cdots&amp;0&amp;0\\<br>0&amp;k-1&amp;1&amp;\cdots&amp;0&amp;0\\<br>\vdots&amp;\vdots&amp;\vdots&amp;\ddots&amp;\vdots&amp;\vdots\\<br>0&amp;0&amp;0&amp;\cdots&amp;2&amp;1\\<br>0&amp;0&amp;0&amp;\cdots&amp;0&amp;1\\<br>\end{pmatrix}}<br>{\begin{pmatrix}<br>f(n-1,k)\\<br>f(n-1,k-1)\\<br>\vdots\\<br>f(n-1,2)\\<br>f(n-1,1)\\<br>\end{pmatrix}}<br>\end{equation}$$</p>
<p>　　所以可以用矩阵递推式把原递推式变成等比数列形式那么可以得到以下式子<br>$$\begin{equation}<br>\begin{pmatrix}<br>f(n,k)\\<br>f(n,k-1)\\<br>\vdots\\<br>f(n,2)\\<br>f(n,1)\\<br>\end{pmatrix}={<br>\begin{pmatrix}<br>k&amp;1&amp;0&amp;\cdots&amp;0&amp;0\\<br>0&amp;k-1&amp;1&amp;\cdots&amp;0&amp;0\\<br>\vdots&amp;\vdots&amp;\vdots&amp;\ddots&amp;\vdots&amp;\vdots\\<br>0&amp;0&amp;0&amp;\cdots&amp;2&amp;1\\<br>0&amp;0&amp;0&amp;\cdots&amp;0&amp;1\\<br>\end{pmatrix}}^{(n-k)}<br>{\begin{pmatrix}<br>f(k,k)\\<br>f(k,k-1)\\<br>\vdots\\<br>f(k,2)\\<br>f(k,1)\\<br>\end{pmatrix}}<br>\end{equation}$$    </p>
<p>　　然后我们将快速幂与矩阵乘法递推式结合起来，我们只需要先用递推计算出base矩阵，然后用快速幂算出per矩阵的(n-k)次方两者相乘得到ans 其中我们将ans矩阵不再初始化为1，而是初始化为矩阵中的“1”(其他矩阵相乘等于其他)。<br>$$<br>{<br>\begin{pmatrix}<br>1&amp;0&amp;0&amp;\cdots&amp;0&amp;0\\<br>0&amp;1&amp;0&amp;\cdots&amp;0&amp;0\\<br>\vdots&amp;\vdots&amp;\vdots&amp;\ddots&amp;\vdots&amp;\vdots\\<br>0&amp;0&amp;0&amp;\cdots&amp;1&amp;0\\<br>0&amp;0&amp;0&amp;\cdots&amp;0&amp;1\\<br>\end{pmatrix}}<br>$$</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=10000;</span><br><span class="line">struct matrax</span><br><span class="line">&#123;</span><br><span class="line">	long long m[66][66];</span><br><span class="line">&#125;;</span><br><span class="line">matrax per,ans,base,cal,unit; </span><br><span class="line">matrax mul(matrax a,matrax b,int x,int y,int z)</span><br><span class="line">&#123;</span><br><span class="line">	matrax c;</span><br><span class="line">	for (int i=0;i&lt;x;i++)</span><br><span class="line">	for (int j=0;j&lt;z;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		c.m[i][j]=0;</span><br><span class="line">		for (int k=0;k&lt;y;k++)</span><br><span class="line">			c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;</span><br><span class="line">		c.m[i][j]=c.m[i][j]%mod;</span><br><span class="line">	&#125;</span><br><span class="line">	return c;</span><br><span class="line">&#125;</span><br><span class="line">matrax qpow(int n,int k)</span><br><span class="line">&#123;</span><br><span class="line">	matrax p=per;</span><br><span class="line">	int ci=n-k;</span><br><span class="line">	while (ci)</span><br><span class="line">	&#123;</span><br><span class="line">		if (ci&amp;1) </span><br><span class="line">		&#123;</span><br><span class="line">		   unit=mul(unit,p,k,k,k);</span><br><span class="line">		   ci--;</span><br><span class="line">		&#125;</span><br><span class="line">		else </span><br><span class="line">		&#123;</span><br><span class="line">			p=mul(p,p,k,k,k);</span><br><span class="line">			ci&gt;&gt;=1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return unit;</span><br><span class="line">&#125;</span><br><span class="line">void init(int k)</span><br><span class="line">&#123;</span><br><span class="line">	for (int i=0;i&lt;50;i++) </span><br><span class="line">	for (int j=0;j&lt;50;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		if (i==j&amp;&amp;i&lt;k) per.m[i][j]=k-i;</span><br><span class="line">		else if (j-1==i&amp;&amp;j&lt;k) per.m[i][j]=1;</span><br><span class="line">		else per.m[i][j]=0;</span><br><span class="line">		if(i==j) unit.m[i][j]=1;</span><br><span class="line">		else unit.m[i][j]=0;</span><br><span class="line">	&#125;</span><br><span class="line">	for (int i=0;i&lt;k;i++)</span><br><span class="line">	base.m[i][0]=cal.m[k-1][k-1-i];</span><br><span class="line">&#125;</span><br><span class="line">void calculation()</span><br><span class="line">&#123;</span><br><span class="line">	for (int i=0;i&lt;50;i++) cal.m[i][i]=cal.m[i][0]=1;</span><br><span class="line">	for(int i=1;i&lt;50;i++)</span><br><span class="line">	for(int j=1;j&lt;i;j++)</span><br><span class="line">	cal.m[i][j]=(cal.m[i-1][j]*(j+1)+cal.m[i-1][j-1])%mod;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int t,n,k;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	calculation();</span><br><span class="line">	while (t--)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">		init(k);</span><br><span class="line">		matrax xi=qpow(n,k);</span><br><span class="line">		ans=mul(xi,base,k,k,1);</span><br><span class="line">		cout&lt;&lt;ans.m[0][0]&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Addition："><a href="#Addition：" class="headerlink" title="Addition："></a>Addition：</h3><p>下面给出一部分结果</p>
<table>
<thead>
<tr>
<th style="text-align:center">n</th>
<th style="text-align:center">k</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">1</td>
<td style="text-align:center">7</td>
<td style="text-align:center">6</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">1</td>
<td style="text-align:center">15</td>
<td style="text-align:center">25</td>
<td style="text-align:center">10</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">1</td>
<td style="text-align:center">31</td>
<td style="text-align:center">90</td>
<td style="text-align:center">65</td>
<td style="text-align:center">15</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">1</td>
<td style="text-align:center">63</td>
<td style="text-align:center">301</td>
<td style="text-align:center">350</td>
<td style="text-align:center">140</td>
<td style="text-align:center">21</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">1</td>
<td style="text-align:center">127</td>
<td style="text-align:center">966</td>
<td style="text-align:center">1701</td>
<td style="text-align:center">1050</td>
<td style="text-align:center">266</td>
<td style="text-align:center">28</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> Tech </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 矩阵 </tag>
            
            <tag> 快速幂 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/12/08/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
